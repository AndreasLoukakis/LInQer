({Enumerable:Enumerable,OrderedEnumerable:OrderedEnumerable,EqualityComparer:EqualityComparer}=function(){function t(t){if(!t)throw new Error("Only iterables or bound functions that return iterators are acceptable");"function"==typeof t?(this._src=t,this._generator=t):(n(t),this._src=t,this._generator=t[Symbol.iterator].bind(t)),this._useQuickSort=!0,void 0!==t._useQuickSort&&(this._useQuickSort=t._useQuickSort),this._canSeek=!1,this._count=null,this._tryGetAt=null,this._wasIterated=!1}function e(t,e,n){this._src=t,this._canSeek=!1,this._count=null,this._tryGetAt=null,this._wasIterated=!1,this._keySelectors=[],this._restrictions=[],e&&this._keySelectors.push({keySelector:e,ascending:n}),this._useQuickSort=!0,void 0!==t._useQuickSort&&(this._useQuickSort=t._useQuickSort),this._generator=function*(){const t=Array.from(this._src);let e=0,n=t.length;for(var r of this._restrictions)switch(r.type){case"take":n=Math.min(n,e+r.nr);break;case"skip":e=Math.min(n,e+r.nr);break;case"takeLast":e=Math.max(e,n-r.nr);break;case"skipLast":n=Math.max(e,n-r.nr)}if(e<n){(this._useQuickSort&&this._restrictions.length?(t,r)=>function(t,e,n,r=u,o=0,s=Number.MAX_SAFE_INTEGER){if(!t.length)return t;const i=[];i.push([e,n]);let c=0;for(;c<i.length;){[e,n]=i[c];const u=h(t,e,n,r);e<u-1&&u-1>=o&&i.push([e,u-1]),u<n&&u<s&&i.push([u,n]),c++}return t}(t,0,t.length-1,r,e,n):(t,e)=>t.sort(e))(t,(t,e)=>{for(const n of this._keySelectors){const r=n.keySelector(t),o=n.keySelector(e);if(r>o)return n.ascending?1:-1;if(r<o)return n.ascending?-1:1}return 0});for(let r=e;r<n;r++)yield t[r]}};const r=this;this._count=()=>r._restrictions.length?(r._count=null,i(r),r._count()):r._src.count.call(r._src)}function n(t){if(!t||!t[Symbol.iterator])throw new Error("the argument must be iterable!")}function r(t){if(!t||"function"!=typeof t)throw new Error("the argument needs to be a function!")}function o(t){return"number"==typeof t?t:Number.NaN}function s(t){return t?Array.isArray(t)?t:Array.from(t):[]}function i(t){t._count||("function"==typeof t._src||"number"!=typeof t._src.length?"number"!=typeof t._src.size?t._count=()=>{let e=0;for(const n of t)e++;return e}:t._count=()=>t._src.size:t._count=()=>t._src.length)}function c(t){t._tryGetAt||(t._canSeek=!0,"string"!=typeof t._src?Array.isArray(t._src)?t._tryGetAt=e=>e>=0&&e<t._src.length?{value:t._src[e]}:null:"function"==typeof t._src||"number"!=typeof t._src.length?(t._canSeek=!1,t._tryGetAt=e=>{let n=0;for(const r of t){if(e===n)return{value:r};n++}return null}):t._tryGetAt=e=>e<t._src.length&&void 0!==t._src[e]?{value:t._src[e]}:null:t._tryGetAt=e=>e<t._src.length?{value:t._src.charAt(e)}:null)}function u(t,e){return t>e?1:t<e?-1:0}function f(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function h(t,e,n,r){const o=t[n+e>>1];for(;e<=n;){for(;r(t[e],o)<0;)e++;for(;r(t[n],o)>0;)n--;if(e<n)f(t,e,n),e++,n--;else if(e===n)return e+1}return e}t.empty=function(){const e=new t([]);return e._count=()=>0,e._tryGetAt=t=>null,e._canSeek=!0,e},t.range=function(e,n){const r=new t(function*(){for(let t=0;t<n;t++)yield e+t}.bind(this));return r._count=()=>n,r._tryGetAt=t=>t>=0&&t<n?{value:e+t}:null,r._canSeek=!0,r},t.repeat=function(e,n){const r=new t(function*(){for(let t=0;t<n;t++)yield e}.bind(this));return r._count=()=>n,r._tryGetAt=t=>t>=0&&t<n?{value:e}:null,r._canSeek=!0,r},t.from=function(e){return e instanceof t?e:new t(e)},t.prototype={[Symbol.iterator](){return this._wasIterated=!0,this._generator()},aggregate(t,e){r(e);for(const n of this)t=e(t,n);return t},all(t){return r(t),!this.any(e=>!t(e))},any(t){r(t);for(const e of this)if(t(e))return!0;return!1},append(t){return this.concat([t])},average(){const t={count:0};for(const e of this)t.sum=0===t.count?o(e):t.sum+o(e),t.count++;return 0==t.count?void 0:t.sum/t.count},asEnumerable(){return this},cast(t){const e="string"==typeof t?e=>typeof e===t:e=>e instanceof t;return this.where(n=>{if(!e(n))throw new Error(n+" not of type "+t);return!0})},concat(e){n(e);const r=new t(function*(){for(const t of this)yield t;for(const t of e)yield t}.bind(this)),o=this,s=t.from(e);return r._count=()=>o.count()+s.count(),c(this),c(s),r._canSeek=o._canSeek&&s._canSeek,o._canSeek&&(r._tryGetAt=t=>o._tryGetAt(t)||s._tryGetAt(t-o.count())),r},contains(t,e=a.default){return r(e),this.any(n=>e(n,t))},count(){return i(this),this._count()},defaultIfEmpty(){throw new Error("defaultIfEmpty not implemented for Javascript")},distinct(e=a.default){return new t((e===a.default?function*(){const t=new Set;for(const e of this){const n=t.size;t.add(e),n<t.size&&(yield e)}}:function*(){const t=[];for(const n of this){let r=!0;for(const o of t)if(e(n,o)){r=!1;break}r&&(yield n),t.push(n)}}).bind(this))},elementAt(t){c(this);const e=this._tryGetAt(t);if(!e)throw new Error("Index out of range");return e.value},elementAtOrDefault(t){c(this);const e=this._tryGetAt(t);if(e)return e.value},except(e,r=a.default){return n(e),new t((r===a.default?function*(){const t=new Set(e);for(const e of this)t.has(e)||(yield e)}:function*(){const t=s(e);for(const e of this){let n=!0;for(const o of t)if(r(e,o)){n=!1;break}n&&(yield e)}}).bind(this))},first(){return this.elementAt(0)},firstOrDefault(){return this.elementAtOrDefault(0)},groupBy(e){r(e);return new t(function*(){const n=new Map;for(const t of this){const r=e(t),o=n.get(r);o?o.push(t):n.set(r,[t])}for(const e of n){const n=new t(e[1]);n.key=e[0],yield n}}.bind(this))},groupJoin(e,n,r,o,i=a.default){const c=i===a.default?function*(){const i=new t(e).groupBy(r).toMap(t=>t.key,t=>t);for(const t of this){const e=s(i.get(n(t)));yield o(t,e)}}:function*(){for(const t of this){const s=[];for(const o of e)i(n(t),r(o))&&s.push(o);yield o(t,s)}};return new t(c.bind(this))},intersect(e,r=a.default){return n(e),new t((r===a.default?function*(){const t=new Set(e);for(const e of this)t.has(e)&&(yield e)}:function*(){const t=s(e);for(const e of this){let n=!0;for(const o of t)if(r(e,o)){n=!1;break}n||(yield e)}}).bind(this))},join(e,n,r,o,s=a.default){const i=s===a.default?function*(){const s=new t(e).groupBy(r).toMap(t=>t.key,t=>t);for(const t of this){const e=s.get(n(t));if(e)for(const n of e)yield o(t,n)}}:function*(){for(const t of this)for(const i of e)s(n(t),r(i))&&(yield o(t,i))};return new t(i.bind(this))},last(){if(c(this),!this._canSeek){let t=null,e=!1;for(const n of this)t=n,e=!0;if(e)return t;throw new Error("The enumeration is empty")}const t=this.count();return this.elementAt(t-1)},lastOrDefault(){if(c(this),!this._canSeek){let t=void 0;for(const e of this)t=e;return t}const t=this.count();return this.elementAtOrDefault(t-1)},longCount(){return this.count()},max(t){return void 0!==t?r(t):t=u,this.aggregate(void 0,(e,n)=>void 0===e||t(n,e)>0?n:e)},min(t){return void 0!==t?r(t):t=u,this.aggregate(void 0,(e,n)=>void 0===e||t(n,e)<0?n:e)},ofType(t){const e="string"==typeof t?e=>typeof e===t:e=>e instanceof t;return this.where(e)},orderBy(t){return t?r(t):t=t=>t,new e(this,t,!0)},orderByDescending(t){return t?r(t):t=t=>t,new e(this,t,!1)},prepend(e){return new t([e]).concat(this)},reverse(){c(this);const e=new t((this._canSeek?function*(){for(let t=this.count()-1;t>=0;t--)yield this.elementAt(t)}:function*(){const t=s(this);for(let e=t.length-1;e>=0;e--)yield t[e]}).bind(this));if(i(this),e._count=this._count,c(this),this._canSeek){const t=this;e._tryGetAt=e=>t._tryGetAt(t.count()-e-1)}return e},select(e){r(e);const n=new t(function*(){for(const t of this)yield e(t)}.bind(this));i(this),n._count=this._count;const o=this;return c(o),n._canSeek=o._canSeek,n._tryGetAt=t=>{const n=o._tryGetAt(t);return n?{value:e(n.value)}:n},n},selectMany(e){void 0!==e?r(e):e=t=>t;return new t(function*(){for(const t of this){n(t);for(const n of e(t))yield n}}.bind(this))},sequenceEqual(t,e=a.default){n(t),r(e);const o=this[Symbol.iterator](),s=t[Symbol.iterator]();let i=!1;do{const t=o.next(),n=s.next();if(!(t.done&&n.done||!t.done&&!n.done&&e(t.value,n.value)))return!1;i=t.done}while(!i);return!0},single(){const t=this[Symbol.iterator]();let e=t.next();if(e.done)throw new Error("Sequence contains no elements");const n=e.value;if(e=t.next(),!e.done)throw new Error("Sequence contains more than one element");return n},singleOrDefault(){const t=this[Symbol.iterator]();let e=t.next();if(e.done)return;const n=e.value;if(e=t.next(),!e.done)throw new Error("Sequence contains more than one element");return n},skip(e){const n=new t(function*(){let t=e;for(const e of this)t>0?t--:yield e}.bind(this)),r=this;return n._count=()=>Math.max(0,r.count()-e),c(this),n._canSeek=this._canSeek,n._tryGetAt=t=>r._tryGetAt(t+e),n},skipLast(e){const n=new t(function*(){let t=e;const n=Array(t);let r=0,o=0;for(const e of this){const s=n[r-o];n[r-o]=e,r++,r-o>=t&&(o+=t),r>t&&(yield s)}n.length=0}.bind(this)),r=this;return n._count=()=>Math.max(0,r.count()-e),c(this),n._canSeek=this._canSeek,this._canSeek&&(n._tryGetAt=t=>t>=n.count()?null:r._tryGetAt(t)),n},skipWhile(e){r(e);let n=!0;return new t(function*(){for(const t of this)n&&!e(t)&&(n=!1),n||(yield t)}.bind(this))},sum(){const t={count:0};for(const e of this)t.sum=0===t.count?o(e):t.sum+o(e),t.count++;return 0==t.count?void 0:t.sum},take(e){const n=new t(function*(){let t=e;for(const e of this)if(t>0&&(yield e,t--),t<=0)break}.bind(this)),r=this;return n._count=()=>Math.min(e,r.count()),c(this),n._canSeek=r._canSeek,r._canSeek&&(n._tryGetAt=t=>t>=e?null:r._tryGetAt(t)),n},takeLast(e){c(this);const n=new t((this._canSeek?function*(){let t=e;const n=this.count();for(let e=n-t;e<n;e++)yield this.elementAt(e)}:function*(){let t=e,n=0;const r=Array(t);for(const e of this)r[n%t]=e,n++;for(let e=0;e<t&&e<n;e++)yield r[(n+e)%t]}).bind(this)),r=this;return n._count=()=>Math.min(e,r.count()),n._canSeek=r._canSeek,r._canSeek&&(n._tryGetAt=t=>t<0||t>=n.count()?null:r._tryGetAt(r.count()-e+t)),n},takeWhile(e){r(e);return new t(function*(){for(const t of this){if(!e(t))break;yield t}}.bind(this))},toArray(){return Array.from(this)},toDictionary(){throw new Error("use toMap or toObject instead of toDictionary")},toMap(t,e=(t=>t)){r(t),r(e);const n=new Map;for(const r of this)n.set(t(r),e(r));return n},toObject(t,e=(t=>t)){r(t),r(e);const n={};for(const r of this)n[t(r)]=e(r);return n},toHashSet(){throw new Error("use toSet instead of toHashSet")},toSet(){const t=new Set;for(const e of this)t.add(e);return t},toList(){throw new Error("use toArray instead of toList")},toLookup(){throw new Error("use groupBy instead of toLookup")},union(t,e=a.default){return n(t),this.concat(t).distinct(e)},useQuickSort(){return this._useQuickSort=!0,this},useBrowserSort(){return this._useQuickSort=!1,this},where(e){r(e);return new t(function*(){let t=0;for(const n of this)e(n,t)&&(yield n),t++}.bind(this))},zip(e,o){n(e),r(o);return new t(function*(){let t=0;const n=this[Symbol.iterator](),r=e[Symbol.iterator]();let s=!1;do{const e=n.next(),i=r.next();s=e.done||i.done,s||(yield o(e.value,i.value,t)),t++}while(!s)}.bind(this))}},e.prototype={thenBy(t){return this._keySelectors.push({keySelector:t,ascending:!0}),this},thenByDescending(t){return this._keySelectors.push({keySelector:t,ascending:!1}),this},take(t){return this._restrictions.push({type:"take",nr:t}),this},takeLast(t){return this._restrictions.push({type:"takeLast",nr:t}),this},skip(t){return this._restrictions.push({type:"skip",nr:t}),this},skipLast(t){return this._restrictions.push({type:"skipLast",nr:t}),this}},Object.setPrototypeOf(e.prototype,t.prototype);const a={default:(t,e)=>t==e,exact:(t,e)=>t===e};return{Enumerable:t,OrderedEnumerable:e,EqualityComparer:a}}());