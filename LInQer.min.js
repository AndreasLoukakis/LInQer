({Enumerable:Enumerable,EqualityComparer:EqualityComparer}=function(){function t(t){if(!t)throw new Error("Only iterables or bound functions that return iterators are acceptable");"function"==typeof t?(this._src=t,this._generator=t):(n(t),this._src=t,this._generator=t[Symbol.iterator].bind(t)),this._canSeek=!1,this._count=null,this._tryGetAt=null,this._wasIterated=!1}function e(t,e,n){this._src=t,this._canSeek=!1,this._count=null,this._tryGetAt=null,this._wasIterated=!1,this._keySelectors=[{keySelector:e,ascending:n}],this._generator=function*(){const t=i(this._src);t.sort((t,e)=>{for(const n of this._keySelectors){const o=n.keySelector(t),r=n.keySelector(e);if(o>r)return n.ascending?1:-1;if(o<r)return n.ascending?-1:1}return 0});for(const e of t)yield e},this._count=this._src.count.bind(this._src)}function n(t){if(!t||!t[Symbol.iterator])throw new Error("the argument must be iterable!")}function o(t){if(!t||"function"!=typeof t)throw new Error("the argument needs to be a function!")}function r(t){return"number"==typeof t?t:Number.NaN}function i(t){return Array.isArray(t)?t:Array.from(t)}function s(t){t._count||("number"!=typeof t._src.length?"number"!=typeof t._src.size?t._count=()=>{let e=0;for(const n of t)e++;return e}:t._count=()=>t._src.size:t._count=()=>t._src.length)}function c(t){t._tryGetAt||(this._canSeek=!0,"string"!=typeof t._src?Array.isArray(t._src)?t._tryGetAt=e=>e>=0&&e<t._src.length?{value:t._src[e]}:null:"number"!=typeof t._src.length?(this._canSeek=!1,t._tryGetAt=e=>{let n=0;for(const o of t){if(e===n)return{value:o};n++}return null}):t._tryGetAt=e=>e<t._src.length&&void 0!==t._src[e]?{value:t._src[e]}:null:t._tryGetAt=e=>e<t._src.length?{value:t._src.charAt(e)}:null)}t.empty=function(){const e=new t([]);return e._count=()=>0,e._tryGetAt=t=>null,e},t.range=function(e,n){const o=new t(function*(){for(let t=0;t<n;t++)yield e+t}.bind(this));return o._count=()=>n,o._tryGetAt=t=>t>=0&&t<n?{value:e+t}:null,o},t.repeat=function(e,n){const o=new t(function*(){for(let t=0;t<n;t++)yield e}.bind(this));return o._count=()=>n,o._tryGetAt=t=>t>=0&&t<n?{value:e}:null,o},t.from=function(e){return e instanceof t?e:new t(e)},t.prototype={[Symbol.iterator](){return this._wasIterated=!0,this._generator()},aggregate(t,e){o(e);for(const n of this)t=e(t,n);return t},all(t){return o(t),!this.any(e=>!t(e))},any(t){o(t);for(const e of this)if(t(e))return!0;return!1},append(t){return this.concat([t])},average(){const t={count:0};for(const e of this)t.sum=0===t.count?r(e):t.sum+r(e),t.count++;return 0==t.count?void 0:t.sum/t.count},asEnumerable(){return this},cast(t){const e="string"==typeof t?e=>typeof e===t:e=>e instanceof t;return this.where(n=>{if(!e(n))throw new Error(n+" not of type "+t);return!0})},concat(e){n(e);const o=new t(function*(){for(const t of this)yield t;for(const t of e)yield t}.bind(this)),r=this;return o._count=()=>{const n=new t(e);return r.count()+n.count()},o},contains(t,e=u.default){return o(e),this.any(n=>e(n,t))},count(){return s(this),this._count()},defaultIfEmpty(){throw new Error("defaultIfEmpty not implemented for Javascript")},distinct(e=u.default){return new t((e===u.default?function*(){const t=new Set;for(const e of this){const n=t.size;t.add(e),n<t.size&&(yield e)}}:function*(){const t=[];for(const n of this){let o=!0;for(const r of t)if(e(n,r)){o=!1;break}o&&(yield n),t.push(n)}}).bind(this))},elementAt(t){c(this);const e=this._tryGetAt(t);if(!e)throw new Error("Index out of range");return e.value},elementAtOrDefault(t){c(this);const e=this._tryGetAt(t);if(e)return e.value},except(e,o=u.default){return n(e),new t((o===u.default?function*(){const t=new Set(e);for(const e of this)t.has(e)||(yield e)}:function*(){const t=i(e);for(const e of this){let n=!0;for(const r of t)if(o(e,r)){n=!1;break}n&&(yield e)}}).bind(this))},first(){return this.elementAt(0)},firstOrDefault(){return this.elementAtOrDefault(0)},groupBy(e){o(e);return new t(function*(){const n=new Map;for(const t of this){const o=e(t),r=n.get(o);r?r.push(t):n.set(o,[t])}for(const e of n){const n=new t(e[1]);n.key=e[0],yield n}}.bind(this))},groupJoin(){throw new Error("groupJoin not implemented for Javascript")},intersect(e,o=u.default){return n(e),new t((o===u.default?function*(){const t=new Set(e);for(const e of this)t.has(e)&&(yield e)}:function*(){const t=i(e);for(const e of this){let n=!0;for(const r of t)if(o(e,r)){n=!1;break}n||(yield e)}}).bind(this))},join(){throw new Error("join is not implemented for Javascript")},last(){if(c(this),!this._canSeek){let t=null,e=!1;for(const n of this)t=n,e=!0;if(e)return t;throw new Error("The enumeration is empty")}const t=this.count();return this.elementAt(t-1)},lastOrDefault(){if(c(this),!this._canSeek){let t=void 0;for(const e of this)t=e;return t}const t=this.count();return this.elementAtOrDefault(t-1)},longCount(){return this.count()},max(t){return void 0!==t?o(t):t=(t,e)=>t>e?1:t<e?-1:0,this.aggregate(void 0,(e,n)=>void 0===e||t(n,e)>0?n:e)},min(t){return void 0!==t?o(t):t=(t,e)=>t>e?1:t<e?-1:0,this.aggregate(void 0,(e,n)=>void 0===e||t(n,e)<0?n:e)},ofType(t){const e="string"==typeof t?e=>typeof e===t:e=>e instanceof t;return this.where(e)},orderBy(t){return t?o(t):t=t=>t,new e(this,t,!0)},orderByDescending(t){return t?o(t):t=t=>t,new e(this,t,!1)},prepend(e){return new t([e]).concat(this)},reverse(){c(this);const e=new t((this._canSeek?function*(){for(let t=this.count()-1;t>=0;t--)yield this.elementAt(t)}:function*(){const t=i(this);for(let e=t.length-1;e>=0;e--)yield t[e]}).bind(this));return s(this),e._count=this._count,e},select(e){o(e);const n=new t(function*(){for(const t of this)yield e(t)}.bind(this));return s(this),n._count=this._count,n},selectMany(e){void 0!==e?o(e):e=t=>t;return new t(function*(){for(const t of this){n(t);for(const n of e(t))yield n}}.bind(this))},sequenceEqual(t,e=u.default){n(t),o(e);const r=this[Symbol.iterator](),i=t[Symbol.iterator]();let s=!1;do{const t=r.next(),n=i.next();if(!(t.done&&n.done||!t.done&&!n.done&&e(t.value,n.value)))return!1;s=t.done}while(!s);return!0},single(){const t=this[Symbol.iterator]();let e=t.next();if(e.done)throw new Error("Sequence contains no elements");const n=e.value;if(e=t.next(),!e.done)throw new Error("Sequence contains more than one element");return n},singleOrDefault(){const t=this[Symbol.iterator]();let e=t.next();if(e.done)return;const n=e.value;if(e=t.next(),!e.done)throw new Error("Sequence contains more than one element");return n},skip(e){const n=new t(function*(){let t=e;for(const e of this)t>0?t--:yield e}.bind(this)),o=this;return n._count=()=>Math.max(0,o.count()-e),n},skipLast(e){const n=new t(function*(){let t=e;const n=Array(t);let o=0,r=0;for(const e of this){const i=n[o-r];n[o-r]=e,o++,o-r>=t&&(r+=t),o>t&&(yield i)}n.length=0}.bind(this)),o=this;return n._count=()=>Math.max(0,o.count()-e),n},skipWhile(e){o(e);let n=!0;return new t(function*(){for(const t of this)n&&!e(t)&&(n=!1),n||(yield t)}.bind(this))},sum(){const t={count:0};for(const e of this)t.sum=0===t.count?r(e):t.sum+r(e),t.count++;return 0==t.count?void 0:t.sum},take(e){const n=new t(function*(){let t=e;for(const e of this)if(t>0&&(yield e,t--),t<=0)break}.bind(this)),o=this;return n._count=()=>Math.min(e,o.count()),n},takeLast(e){c(this);const n=new t((this._canSeek?function*(){let t=e;const n=this.count();for(let e=n-t;e<n;e++)yield this.elementAt(e)}:function*(){let t=e,n=0;const o=Array(t);for(const e of this)o[n%t]=e,n++;for(let e=0;e<t&&e<n;e++)yield o[(n+e)%t]}).bind(this)),o=this;return n._count=()=>Math.min(e,o.count()),n},takeWhile(e){o(e);return new t(function*(){for(const t of this){if(!e(t))break;yield t}}.bind(this))},toArray(){return Array.from(this)},toDictionary(){throw new Error("use toMap or toObject instead of toDictionary")},toMap(t,e=(t=>t)){o(t),o(e);const n=new Map;for(const o of this)n.set(t(o),e(o));return n},toObject(t,e=(t=>t)){o(t),o(e);const n={};for(const o of this)n[t(o)]=e(o);return n},toHashSet(){throw new Error("use toSet instead of toHashSet")},toSet(){const t=new Set;for(const e of this)t.add(e);return t},toList(){throw new Error("use toArray instead of toList")},toLookup(){throw new Error("use toObject instead of toLookup")},union(t){return n(t),this.concat(t).distinct()},where(e){o(e);return new t(function*(){let t=0;for(const n of this)e(n,t)&&(yield n),t++}.bind(this))},zip(e,r){n(e),o(r);return new t(function*(){let t=0;const n=this[Symbol.iterator](),o=e[Symbol.iterator]();let i=!1;do{const e=n.next(),s=o.next();i=e.done||s.done,i||(yield r(e.value,s.value,t)),t++}while(!i)}.bind(this))}},e.prototype={thenBy(t){return this._keySelectors.push({keySelector:t,ascending:!0}),this},thenByDescending(t){return this._keySelectors.push({keySelector:t,ascending:!1}),this}},Object.setPrototypeOf(e.prototype,t.prototype);const u={default:(t,e)=>t==e,exact:(t,e)=>t===e};return{Enumerable:t,EqualityComparer:u}}());