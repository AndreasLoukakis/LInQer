!function(){function t(t){if(!t||!t[Symbol.iterator])throw new Error("the argument must be iterable!")}function e(t,e){return t>e?1:t<e?-1:0}Enumerable.prototype.shuffle=function(){return Enumerable.from(function*(){const t=Array.from(this),e=t.length;let n=0;for(;n<e;){let r=n+Math.floor(Math.random()*(e-n));const o=t[r];t[r]=t[n],t[n]=o,n++,yield o}}.bind(this))},Enumerable.prototype.distinctByHash=function(t){return new Enumerable(function*(){const e=new Set;for(const n of this){const r=e.size;e.add(t(n)),r<e.size&&(yield n)}}.bind(this))},Enumerable.prototype.exceptByHash=function(e,n){t(e);return new Enumerable(function*(){const t=new Enumerable(e).select(n).toSet();for(const e of this)t.has(n(e))||(yield e)}.bind(this))},Enumerable.prototype.intersectByHash=function(e,n){t(e);return new Enumerable(function*(){const t=new Enumerable(e).select(n).toSet();for(const e of this)t.has(n(e))&&(yield e)}.bind(this))},OrderedEnumerable.prototype.binarySearch=function(t,n=e){const r=(o=this)?Array.isArray(o)?o:Array.from(o):[];var o;let i=0,s=r.length-1;for(;i<=s;){const e=i+s>>1,o=n(r[e],t);if(0==o)return e;o<0?i=e+1:s=e-1}return!1}}();